(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{108:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return o})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),s=(r(0),r(117)),i={id:"results-file",title:"Results file",sidebar_label:"Results file",slug:"/results-file"},l={unversionedId:"results-file",id:"results-file",isDocsHomePage:!1,title:"Results file",description:"All your test results will be saved in a results file. By default, Betterer sets this to be .betterer.results, but you can change that by using the --results flag when running Betterer.",source:"@site/docs/results-file.md",slug:"/results-file",permalink:"/betterer/docs/results-file",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/results-file.md",version:"current",lastUpdatedBy:"Craig Spence",lastUpdatedAt:1614393388,sidebar_label:"Results file",sidebar:"docs",previous:{title:"Tests",permalink:"/betterer/docs/tests"},next:{title:"Betterer & TypeScript",permalink:"/betterer/docs/betterer-and-typescript"}},o=[{value:"BettererFileTest results",id:"bettererfiletest-results",children:[]}],c={toc:o};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"All your test results will be saved in a results file. By default, ",Object(s.b)("strong",{parentName:"p"},"Betterer")," sets this to be ",Object(s.b)("inlineCode",{parentName:"p"},".betterer.results"),", but you can change that by using the ",Object(s.b)("a",{parentName:"p",href:"./running-betterer#start-options"},Object(s.b)("inlineCode",{parentName:"a"},"--results"))," flag when running ",Object(s.b)("strong",{parentName:"p"},"Betterer"),"."),Object(s.b)("p",null,"The results file is similar to a ",Object(s.b)("a",{parentName:"p",href:"https://jestjs.io/docs/en/snapshot-testing"},"Jest Snapshot file"),". It should be ",Object(s.b)("a",{parentName:"p",href:"./development-workflow"},"commited along with your code")," and probably shouldn't be ",Object(s.b)("a",{parentName:"p",href:"./updating-results"},"updated")," manually (although you of course can if you're feeling confident!)."),Object(s.b)("p",null,"The results file will look something like this:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},'// BETTERER RESULTS V2.\nexports[`no hack comments`] = {\n  value: `{\n    "packages/cli/src/cli.ts:1074837834": [\n      [13, 0, 7, "RegExp match", "645651780"]\n    ],\n    "packages/cli/src/init/update-package-json.ts:2842907794": [\n      [34, 4, 7, "RegExp match", "645651780"]\n    ]\n  }`\n};\n')),Object(s.b)("p",null,"This is a valid JavaScript file, so you can import it and manipulate it if you need to. Each test will have an object that stores its result value, which can be controlled by a tests ",Object(s.b)("a",{parentName:"p",href:"./betterer-test#bettererserialiser"},Object(s.b)("inlineCode",{parentName:"a"},"serialiser"))," and ",Object(s.b)("a",{parentName:"p",href:"./betterer-test#bettererprinter"},Object(s.b)("inlineCode",{parentName:"a"},"printer"))," options."),Object(s.b)("p",null,"When your tests run, ",Object(s.b)("strong",{parentName:"p"},"Betterer")," will check to see the result against the expected result in the results file. If the new result is better, the results file will be updated, and that result will be the expected baseline going forward."),Object(s.b)("h3",{id:"bettererfiletest-results"},Object(s.b)("a",{parentName:"h3",href:"./betterer-file-test#bettererfiletest"},Object(s.b)("inlineCode",{parentName:"a"},"BettererFileTest"))," results"),Object(s.b)("p",null,"The above example comes from a ",Object(s.b)("a",{parentName:"p",href:"./betterer-file-test#bettererfiletest"},Object(s.b)("inlineCode",{parentName:"a"},"BettererFileTest")),", which has some note-worthy details. A ",Object(s.b)("a",{parentName:"p",href:"./betterer-file-test#bettererfiletest"},Object(s.b)("inlineCode",{parentName:"a"},"BettererFileTest"))," result has the following format:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},'exports[testName]: {\n value: `{\n    "relativeFilePath:fileHash": [\n      [issueLine, issueColumn, length, issueMessage, issueHash]\n      // ... more issues\n    ],\n    // ... more files\n }`\n}\n')),Object(s.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},Object(s.b)("inlineCode",{parentName:"p"},"fileHash")," and ",Object(s.b)("inlineCode",{parentName:"p"},"issueHash")," are used to track issues as the lines of code in a file change, or as the file moves around in the codebase. This means they change quite often! Check out ",Object(s.b)("a",{parentName:"p",href:"./development-workflow"},"development workflow")," for suggested ways to handle this with source control."))))}u.isMDXComponent=!0},117:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,f=p["".concat(i,".").concat(d)]||p[d]||b[d]||s;return r?a.a.createElement(f,l(l({ref:t},c),{},{components:r})):a.a.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<s;c++)i[c]=r[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);