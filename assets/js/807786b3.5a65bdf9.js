"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[115],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(f,i(i({ref:r},p),{},{components:t})):n.createElement(f,i({ref:r},p))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7189:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],l={id:"errors",title:"Betterer errors",sidebar_label:"Betterer errors",slug:"/errors"},c=void 0,s={unversionedId:"api/errors",id:"api/errors",isDocsHomePage:!1,title:"Betterer errors",description:"BettererError",source:"@site/docs/api/errors.md",sourceDirName:"api",slug:"/errors",permalink:"/betterer/docs/errors",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/errors.md",version:"current",lastUpdatedBy:"Craig Spence",lastUpdatedAt:1614393388,formattedLastUpdatedAt:"2/27/2021",frontMatter:{id:"errors",title:"Betterer errors",sidebar_label:"Betterer errors",slug:"/errors"},sidebar:"api",previous:{title:"Betterer contraints",permalink:"/betterer/docs/constraints"},next:{title:"Betterer logger",permalink:"/betterer/docs/logger"}},p=[{value:"<code>BettererError</code>",id:"betterererror",children:[]},{value:"<code>BettererErrorDetail</code>",id:"betterererrordetail",children:[]},{value:"<code>BettererErrorDetails</code>",id:"betterererrordetails",children:[]},{value:"<code>isBettererError()</code>",id:"isbetterererror",children:[]}],u={toc:p};function d(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"betterererror"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererError")),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"BettererError")," is a custom Error for use in ",(0,a.kt)("strong",{parentName:"p"},"Betterer"),". It attaches some extra details to a standard JavaScript error for better logging and debugging."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BettererError } from '@betterer/errors';\n\nconst error = new BettererError(`Something went wrong: \"OOPS!\"`, new Error('Something broke'), 'More details!');\n")),(0,a.kt)("h2",{id:"betterererrordetail"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererErrorDetail")),(0,a.kt)("p",null,"Extra detail to attach to an error."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererErrorDetail = string | Error | BettererError;\n")),(0,a.kt)("h2",{id:"betterererrordetails"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererErrorDetails")),(0,a.kt)("p",null,"A list of ",(0,a.kt)("a",{parentName:"p",href:"#betterererrordetail"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererErrorDetail")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererErrorDetails = ReadonlyArray<BettererErrorDetail>;\n")),(0,a.kt)("h2",{id:"isbetterererror"},(0,a.kt)("inlineCode",{parentName:"h2"},"isBettererError()")),(0,a.kt)("p",null,"Check if an object is a ",(0,a.kt)("a",{parentName:"p",href:"#betterererror"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererError")),"."),(0,a.kt)("p",null,"Usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BettererError, isBettererError } from '@betterer/errors';\n\nisBettererError(new Error()); // false\nisBettererError(new BettererError()); // true\n")))}d.isMDXComponent=!0}}]);