"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[814],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return u}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function g(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=g(e,["components","mdxType","originalType","parentName"]),d=s(r),u=o,m=d["".concat(i,".").concat(u)]||d[u]||p[u]||a;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var g={};for(var i in t)hasOwnProperty.call(t,i)&&(g[i]=t[i]);g.originalType=e,g.mdxType="string"==typeof e?e:o,l[1]=g;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8575:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return g},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),l=["components"],g={id:"logger",title:"Betterer logger",sidebar_label:"Betterer logger",slug:"/logger"},i=void 0,s={unversionedId:"api/logger",id:"api/logger",isDocsHomePage:!1,title:"Betterer logger",description:"BettererLogger",source:"@site/docs/api/logger.md",sourceDirName:"api",slug:"/logger",permalink:"/betterer/docs/logger",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/logger.md",version:"current",lastUpdatedBy:"Craig Spence",lastUpdatedAt:1614393388,formattedLastUpdatedAt:"2/27/2021",frontMatter:{id:"logger",title:"Betterer logger",sidebar_label:"Betterer logger",slug:"/logger"},sidebar:"api",previous:{title:"Betterer errors",permalink:"/betterer/docs/errors"}},c=[{value:"<code>BettererLogger</code>",id:"bettererlogger",children:[]},{value:"<code>BettererLogMessage</code>",id:"bettererlogmessage",children:[]},{value:"<code>BettererLogCode</code>",id:"bettererlogcode",children:[]},{value:"<code>BettererLoggerCodeInfo</code>",id:"bettererloggercodeinfo",children:[]},{value:"<code>BettererLoggerMessages</code>",id:"bettererloggermessages",children:[]}],p={toc:c};function d(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"bettererlogger"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererLogger")),(0,a.kt)("p",null,"The logging interface for ",(0,a.kt)("strong",{parentName:"p"},"Betterer")," reporter and task logging."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererLogger = {\n  code: BettererLogCode;\n  debug: BettererLogMessage;\n  error: BettererLogMessage;\n  info: BettererLogMessage;\n  progress: BettererLogMessage;\n  success: BettererLogMessage;\n  warn: BettererLogMessage;\n};\n")),(0,a.kt)("h2",{id:"bettererlogmessage"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererLogMessage")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererLogMessage = (...messages: BettererLoggerMessages) => Promise<void>;\n")),(0,a.kt)("p",null,"Args:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"...messages"),": ",(0,a.kt)("a",{parentName:"li",href:"#bettererloggermessages"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererLoggerMessages"))," - A list of messages to be logged.")),(0,a.kt)("p",null,"Returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise<void>")),(0,a.kt)("h2",{id:"bettererlogcode"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererLogCode")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererLogCode = (codeInfo: BettererLoggerCodeInfo) => Promise<void>;\n")),(0,a.kt)("p",null,"Args:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"codeInfo"),": ",(0,a.kt)("a",{parentName:"li",href:"#bettererloggercodeinfo"},(0,a.kt)("inlineCode",{parentName:"a"},"BettererLoggerCodeInfo"))," - An object containing the data to render a code block with a message.")),(0,a.kt)("p",null,"Returns: ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise<void>")),(0,a.kt)("h2",{id:"bettererloggercodeinfo"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererLoggerCodeInfo")),(0,a.kt)("p",null,"An object containing the data to render a code block with a message."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererLoggerCodeInfo = {\n  message: string;\n  filePath: string;\n  fileText: string;\n  line: number;\n  column: number;\n  length: number;\n};\n")),(0,a.kt)("h2",{id:"bettererloggermessages"},(0,a.kt)("inlineCode",{parentName:"h2"},"BettererLoggerMessages")),(0,a.kt)("p",null,"A list of messages to be logged."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type BettererLoggerMessages = Array<string>;\n")))}d.isMDXComponent=!0}}]);