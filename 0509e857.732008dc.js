(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{117:function(e,r,t){"use strict";t.d(r,"a",(function(){return b})),t.d(r,"b",(function(){return u}));var n=t(0),o=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var g=o.a.createContext({}),s=function(e){var r=o.a.useContext(g),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},b=function(e){var r=s(e.components);return o.a.createElement(g.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},d=o.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),b=s(t),d=n,u=b["".concat(c,".").concat(d)]||b[d]||p[d]||a;return t?o.a.createElement(u,l(l({ref:r},g),{},{components:t})):o.a.createElement(u,l({ref:r},g))}));function u(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,c=new Array(a);c[0]=d;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var g=2;g<a;g++)c[g]=t[g];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},71:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return l})),t.d(r,"toc",(function(){return i})),t.d(r,"default",(function(){return s}));var n=t(3),o=t(7),a=(t(0),t(117)),c={id:"logger",title:"Betterer logger",sidebar_label:"Betterer logger",slug:"/logger"},l={unversionedId:"api/logger",id:"api/logger",isDocsHomePage:!1,title:"Betterer logger",description:"BettererLogger",source:"@site/docs/api/logger.md",slug:"/logger",permalink:"/betterer/docs/logger",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/logger.md",version:"current",lastUpdatedBy:"Craig Spence",lastUpdatedAt:1614393388,sidebar_label:"Betterer logger",sidebar:"api",previous:{title:"Betterer errors",permalink:"/betterer/docs/errors"}},i=[{value:"<code>BettererLogger</code>",id:"bettererlogger",children:[]},{value:"<code>BettererLogMessage</code>",id:"bettererlogmessage",children:[]},{value:"<code>BettererLogCode</code>",id:"bettererlogcode",children:[]},{value:"<code>BettererLoggerCodeInfo</code>",id:"bettererloggercodeinfo",children:[]},{value:"<code>BettererLoggerMessages</code>",id:"bettererloggermessages",children:[]}],g={toc:i};function s(e){var r=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},g,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"bettererlogger"},Object(a.b)("inlineCode",{parentName:"h2"},"BettererLogger")),Object(a.b)("p",null,"The logging interface for ",Object(a.b)("strong",{parentName:"p"},"Betterer")," reporter and task logging."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"type BettererLogger = {\n  code: BettererLogCode;\n  debug: BettererLogMessage;\n  error: BettererLogMessage;\n  info: BettererLogMessage;\n  progress: BettererLogMessage;\n  success: BettererLogMessage;\n  warn: BettererLogMessage;\n};\n")),Object(a.b)("h2",{id:"bettererlogmessage"},Object(a.b)("inlineCode",{parentName:"h2"},"BettererLogMessage")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"type BettererLogMessage = (...messages: BettererLoggerMessages) => Promise<void>;\n")),Object(a.b)("p",null,"Args:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"...messages"),": ",Object(a.b)("a",{parentName:"li",href:"#bettererloggermessages"},Object(a.b)("inlineCode",{parentName:"a"},"BettererLoggerMessages"))," - A list of messages to be logged.")),Object(a.b)("p",null,"Returns: ",Object(a.b)("inlineCode",{parentName:"p"},"Promise<void>")),Object(a.b)("h2",{id:"bettererlogcode"},Object(a.b)("inlineCode",{parentName:"h2"},"BettererLogCode")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"type BettererLogCode = (codeInfo: BettererLoggerCodeInfo) => Promise<void>;\n")),Object(a.b)("p",null,"Args:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"codeInfo"),": ",Object(a.b)("a",{parentName:"li",href:"#bettererloggercodeinfo"},Object(a.b)("inlineCode",{parentName:"a"},"BettererLoggerCodeInfo"))," - An object containing the data to render a code block with a message.")),Object(a.b)("p",null,"Returns: ",Object(a.b)("inlineCode",{parentName:"p"},"Promise<void>")),Object(a.b)("h2",{id:"bettererloggercodeinfo"},Object(a.b)("inlineCode",{parentName:"h2"},"BettererLoggerCodeInfo")),Object(a.b)("p",null,"An object containing the data to render a code block with a message."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"type BettererLoggerCodeInfo = {\n  message: string;\n  filePath: string;\n  fileText: string;\n  line: number;\n  column: number;\n  length: number;\n};\n")),Object(a.b)("h2",{id:"bettererloggermessages"},Object(a.b)("inlineCode",{parentName:"h2"},"BettererLoggerMessages")),Object(a.b)("p",null,"A list of messages to be logged."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"type BettererLoggerMessages = Array<string>;\n")))}s.isMDXComponent=!0}}]);